pipeline {
    agent any

    environment {
        JENKINS_URL = "http://test-jenkins-agent-new:8080"
        JOB_NAME = "FB001-Test_internal_user_login"
        TRIGGER_TOKEN = "testTriggerToken"
        AUTH_CREDENTIALS = "admin:117406bbd24b3f9fb0d9477247049b272a"
        REPORT_DIR = "${env.WORKSPACE}/archivedReports"
        API_URL = "http://compose-aio-service/api/reports/upload"
    }

    stages {
        stage('Trigger Job and Get Reports') {
            steps {
                script {
                    // Trigger the job
                    def triggerUrl = "${JENKINS_URL}/job/${JOB_NAME}/build?token=${TRIGGER_TOKEN}"
                    echo "Triggering job: ${triggerUrl}"
                    sh "curl -u ${AUTH_CREDENTIALS} -X POST \"${triggerUrl}\""

                    // Wait for the job to complete
                    sleep 120 // Adjust based on expected job duration

                    // Fetch the final report file list
                    def finalReportUrl = "${JENKINS_URL}/job/${JOB_NAME}/lastSuccessfulBuild/artifact/archivedReports/final_report.txt"
                    sh "mkdir -p ${REPORT_DIR}" // Ensure report directory exists
                    
                    def fileNames = sh(
                        script: "curl -u ${AUTH_CREDENTIALS} \"${finalReportUrl}\"", 
                        returnStdout: true
                    ).trim().split("\n")

                    // Download each file listed in the final report
                    fileNames.each { file ->
                        def fileUrl = "${JENKINS_URL}/job/${JOB_NAME}/lastSuccessfulBuild/artifact/archivedReports/${file}"
                        def filePath = "${REPORT_DIR}/${file}"
                        echo "Downloading: ${fileUrl} to ${filePath}"
                        sh "curl -u ${AUTH_CREDENTIALS} \"${fileUrl}\" -o ${filePath}"
                    }

                    echo "Reports downloaded successfully."

                    // Create a single API call with all files
                    def fileParams = fileNames.collect { file -> "-F \"files=@${REPORT_DIR}/${file}\"" }.join(" ")
                    sh """
                    curl -X POST "${API_URL}" \
                        ${fileParams}
                    """

                    echo "All files uploaded successfully."

                    // Clean workspace
                    cleanWs()
                }
            }
        }
    }
}
